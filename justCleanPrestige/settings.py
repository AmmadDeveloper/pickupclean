"""
Django settings for justCleanPrestige project.

Generated by 'django-admin startproject' using Django 3.2.12.

For more information on this file, see
https://docs.djangoproject.com/en/3.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.2/ref/settings/
"""
import os.path
from pathlib import Path

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-q1n9yg2@h=*c_m0n#94)jzak%)i!f!mm^%str1$qti7jbr3jx7'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ['*']


STRIPE_PUBLISHABLE_KEY='pk_test_51JlhHTAIj4VUJPcDeLGSFO23zCFWywO8QCsU6jwKzYBtgAeUzC3USVd28e9q71Msxcc5ZMPQRBGO5h0V2xbHefhQ00xEanG3at'
STRIPE_SECRET_KEY='sk_test_51JlhHTAIj4VUJPcDfNA5qSSTWmQNyleq7dbrbrSA9r8zmlZ32z9rsy0ZuWqhJSV4rv6trZDl8VgGpTV8JkwTGpgV00L7dwGE6l'

# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'django.contrib.sites',
    'home',
    'panel',
    'mobile',
    'corsheaders',
    'models',
    'accounts',
    'rest_framework',
    'rest_framework.authtoken',
    'allauth',
    'allauth.account',
    'allauth.socialaccount',
    'allauth.socialaccount.providers.google',
    'allauth.socialaccount.providers.facebook',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    "corsheaders.middleware.CorsMiddleware",
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

AUTHENTICATION_BACKENDS = [
    # Needed to login by username in Django admin, regardless of `allauth`
    'django.contrib.auth.backends.ModelBackend',

    # `allauth` specific authentication methods, such as login by e-mail
    'allauth.account.auth_backends.AuthenticationBackend',
]






ROOT_URLCONF = 'justCleanPrestige.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [BASE_DIR / 'templates']
        ,
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'justCleanPrestige.wsgi.application'
ASGI_APPLICATION='justCleanPrestige.asgi.application'



CHANNEL_LAYERS = {
    'default': {
        'BACKEND': 'channels_redis.core.RedisChannelLayer',
        'CONFIG': {
            "hosts": [('127.0.0.1', 6379)],
        },
    },
}


# Database
# https://docs.djangoproject.com/en/3.2/ref/settings/#databases

DATABASES = {
    # 'default': {
    #     'ENGINE': 'django.db.backends.sqlite3',
    #     'NAME': BASE_DIR / 'db.sqlite3',
    # }
    'default': {
        'ENGINE': 'django.db.backends.postgresql',
        'NAME': 'test',
        'HOST': '46.101.55.159',
        # 'HOST': '172.17.0.2',
        'USER': 'pickupclean',
        'PORT': '5432',
        'PASSWORD':'12345super'
    },
}


# Password validation
# https://docs.djangoproject.com/en/3.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/3.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.2/howto/static-files/

STATIC_URL = '/static/'
MEDIA_URL='/media/'
STATIC_ROOT= os.path.join(BASE_DIR,'static')
MEDIA_ROOT= os.path.join(BASE_DIR,'media')
STATICFILES_DIRS = (
    # Put strings here, like "/home/html/static" or "C:/www/django/static".
    # Always use forward slashes, even on Windows.
    # Don't forget to use absolute paths, not relative paths.
    # os.path.dirname(__file__),
    os.path.join(BASE_DIR,'panel/templates/dashboard/static'),
    os.path.join(BASE_DIR,'panel/templates/dashboard/'),
    os.path.join(BASE_DIR, 'home/static'),
    # os.path.join(PROJECT_DIR, '../API/templates/Invoices/yellow/'),
    # os.path.join(PROJECT_DIR, '../API/templates/Invoices/plain/'),
    # os.path.join(PROJECT_DIR, 'static'),
)
# Default primary key field type
# https://docs.djangoproject.com/en/3.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

CORS_ALLOWED_ORIGINS = [
    'http://localhost:3000',
]
CORS_ORIGIN_WHITELIST = (

    'http://localhost:3000',

)

# AUTH_USER_MODEL='models.User'

SITE_ID = 1
ACCOUNT_AUTHENTICATION_METHOD='username_email'
ACCOUNT_EMAIL_VERIFICATION='none'
# Provider specific settings
SOCIALACCOUNT_PROVIDERS = {
    'google': {
        # For each OAuth based provider, either add a ``SocialApp``
        # (``socialaccount`` app) containing the required client
        # credentials, or list them here:
        'APP': {
            'client_id': '342462780848-clcoeia8oa635pkn2d3dsor3cs8uajmn.apps.googleusercontent.com',
            'secret': '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',
            'key': ''
        },
        'SCOPE':[
            'email',
            'profile'
        ]
    },
    'facebook': {
        # For each OAuth based provider, either add a ``SocialApp``
        # (``socialaccount`` app) containing the required client
        # credentials, or list them here:
        'APP': {
            'client_id': '989243211762191',
            'secret': '82f3655de2cc38fa86a8a2472ed4bdaa',
            'key': ''
        },
        'SCOPE':[
            'email'
        ]
    }
}
#SEND EMAIL
EMAIL_HOST='smtp.gmail.com'
EMAIL_PORT=587
EMAIL_HOST_USER='suitclosset@gmail.com'
EMAIL_HOST_PASSWORD='uoxlgodbqekcwvdt'
EMAIL_USE_TLS=True
EMAIL_TIMEOUT=5000


SERVER_URL='https://pickupclean.herokuapp.com/'


#TWILIO
ACCOUNT_SID='AC1bfc23beba30546467e2c4351485b009'
AUTH_TOKEN='2714974eac7458a1f3b1decb9e27dc00'
MESSAGE_SERVICE_SID='MG0f508964da61e66634828eb44a2b27a9'
PHONE_NUMBER='+19707164935'
NOTIFY_SID='IS5d64c0c0999c6cdd8c03ad7d23e7d16f'

USERNAME_FIELD='email'
LOGIN_REDIRECT_URL="success"